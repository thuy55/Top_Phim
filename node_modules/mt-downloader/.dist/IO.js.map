{"version":3,"sources":["../src/IO.js"],"names":["Rx","fromCB","compose","apply","fromNodeCallback","toOB","cb","shareReplay","flatMap","FILE","curry","fs","open","fstat","read","write","close","truncate","rename","HTTP","_request","request","requestHead","params","response$","first","tap","x","destroy","share","select","event","request$","filter","pluck","BAR","ProgressBar","bar","total","complete","incomplete","update","bind"],"mappings":"AAAA;;;;;;;AAEA;;AACA;;IAAYA,E;;AACZ;;AACA;;;;AACA;;;;;;AAEO,MAAMC,0BAAS,gBAAEC,OAAF,CAAU,gBAAEC,KAAZ,EAAmB,eAAEC,gBAArB,CAAf;AACA,MAAMC,sBAAOC,MAAM,gBAAEJ,OAAF,CACxBF,GAAGO,WAAH,CAAe,CAAf,CADwB,EAExBP,GAAGQ,OAAH,CAAWP,OAAOK,EAAP,CAAX,CAFwB,CAAnB;;AAKP;;;;;;;AAOO,MAAMG,sBAAO,gBAAEC,KAAF,CAASC,EAAD,IAAQ;AAClC,SAAO;AACL;;;;;;AAMAC,UAAMP,KAAKM,GAAGC,IAAR,CAPD;;AASL;;;;;;;AAOAC,WAAOR,KAAKM,GAAGE,KAAR,CAhBF;;AAkBL;;;;;;;AAOAC,UAAMT,KAAKM,GAAGG,IAAR,CAzBD;;AA2BL;;;;;;;AAOAC,WAAOV,KAAKM,GAAGI,KAAR,CAlCF;;AAoCL;;;;;;;AAOAC,WAAOX,KAAKM,GAAGK,KAAR,CA3CF;;AA6CL;;;;;;;AAOAC,cAAUZ,KAAKM,GAAGM,QAAR,CApDL;;AAsDL;;;;;;;AAOAC,YAAQb,KAAKM,GAAGO,MAAR;AA7DH,GAAP;AA+DD,CAhEmB,CAAb;;AAkEP;;;AAGO,MAAMC,sBAAO,gBAAET,KAAF,CAASU,QAAD,IAAc;AACxC,QAAMC,UAAU,sBAAQD,QAAR,CAAhB;AACA,QAAME,cAAeC,MAAD,IAAY;AAC9B,UAAM,CAAC,EAACC,SAAD,EAAD,IAAgB,kBAAMH,QAAQE,MAAR,CAAN,EAAuB,WAAvB,CAAtB;AACA,WAAOC,UAAUC,KAAV,GAAkBC,GAAlB,CAAsBC,KAAKA,EAAEC,OAAF,EAA3B,EAAwCC,KAAxC,EAAP;AACD,GAHD;;AAKA,QAAMC,SAAS,gBAAEpB,KAAF,CAAQ,CAACqB,KAAD,EAAQC,QAAR,KAAqBA,SAASC,MAAT,CAAgBN,KAAKA,EAAEI,KAAF,KAAYA,KAAjC,EAAwCG,KAAxC,CAA8C,SAA9C,CAA7B,CAAf;AACA,SAAO;AACLZ,eADK;AAELQ,UAFK;AAGL;;;;;;;AAOAT;AAVK,GAAP;AAYD,CApBmB,CAAb;;AAsBA,MAAMc,oBAAM,gBAAEzB,KAAF,CAAS0B,WAAD,IAAiB;AAC1C,QAAMC,MAAM,IAAID,WAAJ,CAAgB,gBAAhB,EAAkC;AAC5CE,WAAO,IADqC;AAE5CC,cAAU,GAFkC;AAG5CC,gBAAY;AAHgC,GAAlC,CAAZ;AAKA,SAAOH,IAAII,MAAJ,CAAWC,IAAX,CAAgBL,GAAhB,CAAP;AACD,CAPkB,CAAZ","file":"IO.js","sourcesContent":["'use strict'\n\nimport {Observable as O} from 'rx'\nimport * as Rx from './RxFP'\nimport {demux} from 'muxer'\nimport R from 'ramda'\nimport {Request} from './Request'\n\nexport const fromCB = R.compose(R.apply, O.fromNodeCallback)\nexport const toOB = cb => R.compose(\n  Rx.shareReplay(1),\n  Rx.flatMap(fromCB(cb))\n)\n\n/**\n * Provides wrappers over the async utils inside the\n * {@link https://nodejs.org/api/fs.html fs module}.\n * The wrappers take in an input stream of arguments\n * and returns the result of function call as another stream.\n * @namespace FILE\n */\nexport const FILE = R.curry((fs) => {\n  return {\n    /**\n     * @function\n     * @memberOf FILE\n     * @param {external:Observable} params$\n     * @return {external:Observable}\n     */\n    open: toOB(fs.open),\n\n    /**\n     * {@link https://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback}\n     * @function\n     * @memberOf FILE\n     * @param {external:Observable} params$\n     * @return {external:Observable}\n     */\n    fstat: toOB(fs.fstat),\n\n    /**\n     * {@link https://nodejs.org/api/fs.html#fs_fs_read_fd_buffer_offset_length_position_callback}\n     * @function\n     * @memberOf FILE\n     * @param {external:Observable} params$\n     * @return {external:Observable}\n     */\n    read: toOB(fs.read),\n\n    /**\n     * {@link https://nodejs.org/api/fs.html#fs_fs_write_fd_buffer_offset_length_position_callback}\n     * @function\n     * @memberOf FILE\n     * @param {external:Observable} params$\n     * @return {external:Observable}\n     */\n    write: toOB(fs.write),\n\n    /**\n     * {@link https://nodejs.org/api/fs.html#fs_fs_close_fd_callback}\n     * @function\n     * @memberOf FILE\n     * @param {external:Observable} params$\n     * @return {external:Observable}\n     */\n    close: toOB(fs.close),\n\n    /**\n     * {@link https://nodejs.org/api/fs.html#fs_fs_truncate_path_len_callback}\n     * @function\n     * @memberOf FILE\n     * @param {external:Observable} params$\n     * @return {external:Observable}\n     */\n    truncate: toOB(fs.truncate),\n\n    /**\n     * {@link https://nodejs.org/api/fs.html#fs_fs_rename_oldpath_newpath_callback}\n     * @function\n     * @memberOf FILE\n     * @param {external:Observable} params$\n     * @return {external:Observable}\n     */\n    rename: toOB(fs.rename)\n  }\n})\n\n/**\n * @namespace HTTP\n */\nexport const HTTP = R.curry((_request) => {\n  const request = Request(_request)\n  const requestHead = (params) => {\n    const [{response$}] = demux(request(params), 'response$')\n    return response$.first().tap(x => x.destroy()).share()\n  }\n\n  const select = R.curry((event, request$) => request$.filter(x => x.event === event).pluck('message'))\n  return {\n    requestHead,\n    select,\n    /**\n     * Stream based wrapper over {@link https://www.npmjs.com/package/request npm/request}\n     * @function\n     * @memberOf HTTP\n     * @param {object} params - {@link https://www.npmjs.com/package/request  request} module params.\n     * @return {external:Observable} multiplex stream\n     */\n    request\n  }\n})\n\nexport const BAR = R.curry((ProgressBar) => {\n  const bar = new ProgressBar(':bar :percent ', {\n    total: 1000,\n    complete: '█',\n    incomplete: '░'\n  })\n  return bar.update.bind(bar)\n})\n"]}